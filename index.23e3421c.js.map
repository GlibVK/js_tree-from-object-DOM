{"mappings":"ACoBA,IAAM,EAAM,SAAS,aAAa,CAAC,MAEnC,CAAA,EAAI,EAAE,CAAG,OACT,SAAS,IAAI,CAAC,MAAM,CAAC,GAsBrB,AAlBA,SAAS,EAAW,CAAO,CAAE,CAAI,EAC/B,IAAM,EAAO,OAAO,IAAI,CAAC,GAEzB,GAAI,EAAK,MAAM,CAAG,EAAG,CACnB,IAAM,EAAK,SAAS,aAAa,CAAC,MAE7B,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAmB,CAAnB,IAAM,EAAN,EAAA,KAAA,CACG,EAAK,SAAS,aAAa,CAAC,KAElC,CAAA,EAAG,SAAS,CAAG,EACf,EAAG,MAAM,CAAC,GACV,EAAW,EAAI,CAAI,CAAC,EAAI,CAC1B,C,C,M,E,CANK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAQL,EAAQ,MAAM,CAAC,EACjB,CACF,EAlBa,SAAS,aAAa,CAAC,SAvBvB,CACX,MAAO,CACL,KAAM,CAAC,EACP,QAAS,CAAC,CACZ,EAEA,MAAO,CACL,IAAK,CACH,OAAQ,CAAC,EACT,WAAY,CAAC,CACf,EACA,OAAQ,CACN,OAAQ,CAAC,EACT,UAAW,CAAC,CACd,CACF,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar food = {\n    Drink: {\n        Wine: {},\n        Schnaps: {}\n    },\n    Fruit: {\n        Red: {\n            Cherry: {},\n            Strawberry: {}\n        },\n        Yellow: {\n            Banana: {},\n            Pineapple: {}\n        }\n    }\n};\nvar div = document.createElement(\"div\");\ndiv.id = \"tree\";\ndocument.body.append(div);\nvar tree = document.querySelector(\"#tree\");\nfunction createTree(element, data) {\n    var keys = Object.keys(data);\n    if (keys.length > 0) {\n        var ul = document.createElement(\"ul\");\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var key = _step.value;\n                var li = document.createElement(\"li\");\n                li.innerText = key;\n                ul.append(li);\n                createTree(li, data[key]);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        element.append(ul);\n    }\n}\ncreateTree(tree, food);\n\n//# sourceMappingURL=index.23e3421c.js.map\n","'use strict';\n\nconst food = {\n  Drink: {\n    Wine: {},\n    Schnaps: {},\n  },\n\n  Fruit: {\n    Red: {\n      Cherry: {},\n      Strawberry: {},\n    },\n    Yellow: {\n      Banana: {},\n      Pineapple: {},\n    },\n  },\n};\n\nconst div = document.createElement('div');\n\ndiv.id = 'tree';\ndocument.body.append(div);\n\nconst tree = document.querySelector('#tree');\n\nfunction createTree(element, data) {\n  const keys = Object.keys(data);\n\n  if (keys.length > 0) {\n    const ul = document.createElement('ul');\n\n    for (const key of keys) {\n      const li = document.createElement('li');\n\n      li.innerText = key;\n      ul.append(li);\n      createTree(li, data[key]);\n    }\n\n    element.append(ul);\n  }\n}\n\ncreateTree(tree, food);\n"],"names":["div","document","createElement","id","body","append","createTree","element","data","keys","Object","length","ul","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","key","value","li","innerText","err","return","querySelector","Drink","Wine","Schnaps","Fruit","Red","Cherry","Strawberry","Yellow","Banana","Pineapple"],"version":3,"file":"index.23e3421c.js.map"}